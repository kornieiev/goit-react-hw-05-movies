{"version":3,"file":"static/js/310.c756f8d0.chunk.js","mappings":"oIASA,IATgB,CACdA,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N,oICHOC,EAAaC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uEAMvBC,EAAaH,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4FAOxBG,EAAcL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+CAK1BK,EAAeP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8B,kBCV1B,SAASO,IAAe,IAADC,EACpCC,GAAwCC,EAAAA,EAAAA,IAAgB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAChCI,EAAuC,QAA5BP,EAAGK,EAAaG,IAAI,gBAAQ,IAAAR,EAAAA,EAAI,GAC/CS,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAA/BG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAoCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,MACkB,YAAtBJ,EAASK,UAA0BhB,IACrCM,EAASN,GACTiB,MAAM,mDAADC,OACgDb,EAAK,8CACxDc,EAAAA,GAECC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GACJX,EAAcW,EAASE,QACzB,IACCC,OAAM,SAAAC,GAAG,OAAIX,QAAQY,MAAMD,EAAI,IAEtC,GAAG,CAACd,EAASK,SAAUX,EAAOL,IAgB9B,OACE2B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAChD,EAAU,CAAA+C,SAAA,EACTC,EAAAA,EAAAA,MAAC5C,EAAU,CAAC6C,SAjBG,SAAAC,GACnBA,EAAEC,iBACF3B,EAAS0B,EAAEE,OAAOC,YAAYC,OAC9BrC,EAAgB,CAAEM,MAAO2B,EAAEE,OAAOC,YAAYC,OAChD,EAayCP,SAAA,EACjCF,EAAAA,EAAAA,KAACvC,EAAW,CACViD,SAbgB,SAAAL,GAExB,GADAA,EAAEC,iBACqB,KAAnBD,EAAEE,OAAOE,MACX,OAAOrC,EAAgB,CAAC,GAE1BA,EAAgB,CAAEM,MAAO2B,EAAEE,OAAOE,OACpC,EAQUA,MAAOpC,EACPsC,KAAK,OACLC,GAAG,cACHC,KAAK,cACLC,YAAY,gCAEdd,EAAAA,EAAAA,KAACrC,EAAY,CAACgD,KAAK,SAAQT,SAAC,eAE9BF,EAAAA,EAAAA,KAAA,MAAAE,SACGpB,GACCA,EAAWiC,KAAI,SAAAC,GAAI,OACjBhB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAE,GAAA3B,OAAKyB,EAAKJ,IAAMO,MAAO,CAAEC,KAAMpC,GAAWkB,SAC/Cc,EAAKK,SAFDL,EAAKJ,GAIT,UAMnB,C","sources":["components/services/options.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1ZmExZTQzYTY5NjQxYWQzYTdkZWZlZjIwMGJhMDdkOCIsInN1YiI6IjY0ODA3YjgzYmYzMWYyMDExZDQxNWU3NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ksZZ1upa3Zr_WyjRmw4RGhXYrHQMIjUphgwFV2WUWlw',\n  },\n};\n\nexport default options;\n","import styled from 'styled-components';\n\nexport const MoviesWrap = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n`;\n\nexport const MoviesForm = styled.form`\n  margin-top: 10px;\n  margin-bottom: 0px;\n  margin-left: 0px;\n  padding: 0px;\n`;\n\nexport const MoviesInput = styled.input`\n  font-size: 18px;\n  width: 300px;\n`;\n\nexport const MoviesButton = styled.button`\n  font-size: 18px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  MoviesWrap,\n  MoviesForm,\n  MoviesInput,\n  MoviesButton,\n} from './Movies.styled';\nimport options from 'components/services/options';\n\nexport default function SearchMovie() {\n  const [searchParams, setSearchParams] = useSearchParams('');\n  let searchValue = searchParams.get('query') ?? '';\n  const [query, setQuery] = useState('');\n  const [searchList, setSearchList] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log();\n    if (location.pathname === '/movies' && searchValue) {\n      setQuery(searchValue);\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n        options\n      )\n        .then(response => response.json())\n        .then(response => {\n          setSearchList(response.results);\n        })\n        .catch(err => console.error(err));\n    }\n  }, [location.pathname, query, searchValue]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery(e.target.searchQuery.value);\n    setSearchParams({ query: e.target.searchQuery.value });\n  };\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: e.target.value });\n  };\n\n  return (\n    <>\n      <MoviesWrap>\n        <MoviesForm onSubmit={handleSubmit}>\n          <MoviesInput\n            onChange={handleInputChange}\n            value={searchValue}\n            type=\"text\"\n            id=\"searchQuery\"\n            name=\"searchQuery\"\n            placeholder=\"Enter movie name to search\"\n          />\n          <MoviesButton type=\"submit\">Search</MoviesButton>\n        </MoviesForm>\n        <ul>\n          {searchList &&\n            searchList.map(item => (\n              <li key={item.id}>\n                <Link to={`${item.id}`} state={{ from: location }}>\n                  {item.title}\n                </Link>\n              </li>\n            ))}\n        </ul>\n      </MoviesWrap>\n    </>\n  );\n}\n"],"names":["method","headers","accept","Authorization","MoviesWrap","styled","_templateObject","_taggedTemplateLiteral","MoviesForm","_templateObject2","MoviesInput","_templateObject3","MoviesButton","_templateObject4","SearchMovie","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","searchValue","get","_useState","useState","_useState2","query","setQuery","_useState3","_useState4","searchList","setSearchList","location","useLocation","useEffect","console","log","pathname","fetch","concat","options","then","response","json","results","catch","err","error","_jsx","_Fragment","children","_jsxs","onSubmit","e","preventDefault","target","searchQuery","value","onChange","type","id","name","placeholder","map","item","Link","to","state","from","title"],"sourceRoot":""}