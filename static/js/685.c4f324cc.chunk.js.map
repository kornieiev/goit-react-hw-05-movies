{"version":3,"file":"static/js/685.c4f324cc.chunk.js","mappings":"yTAKe,SAASA,IACtB,IAAMC,GAASC,EAAAA,EAAAA,MACfC,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAmBpB,OAjBAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKC,MAAM,sCAADC,OACYpB,EAAOqB,QAAO,2BACpDC,EAAAA,GACA,KAAD,EAHa,OAARR,EAAQE,EAAAO,KAAAP,EAAAE,KAAA,EAIOJ,EAASU,OAAO,KAAD,EAA9BT,EAAMC,EAAAO,KACZhB,EAAQQ,GAAQC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAEhBU,QAAQC,MAAM,uBAAsBX,EAAAS,IAAS,yBAAAT,EAAAY,OAAA,GAAAf,EAAA,mBAEhD,kBAXkB,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAanBrB,GACF,GAAG,CAACT,EAAOqB,WAGTU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACG3B,IACCyB,EAAAA,EAAAA,KAAA,MAAAE,SACG3B,EAAKA,KAAK4B,KAAI,SAAAC,GAAI,OACjBC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,OACEM,IACEF,EAAKG,aAAY,mCAAAlB,OACsBe,EAAKG,cACxCC,EAENC,IAAKL,EAAKM,KACVC,MAAM,OACNC,OAAO,WAETZ,EAAAA,EAAAA,KAAA,KAAAE,SAAIE,EAAKM,QACTL,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,cAAYE,EAAKS,eAZbT,EAAKU,GAaT,OAMjB,C,oBCzCA,IATgB,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N,sBCLN,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOhC,GAEP,YADA0B,EAAO1B,EAET,CAEI+B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAAS5C,EAAkBoD,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOpC,UACX,OAAO,IAAI+B,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGlC,MAAMmC,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOY,GACdjB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASY,EACnE,CAEAb,OAAMc,EACR,GACF,CACF,C","sources":["components/Cast/Cast.jsx","components/services/options.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport options from '../services/options.js';\nimport stubLittle from '../../stubs/stub_little.jpg';\n\nexport default function Cast() {\n  const params = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    const fetchCastData = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${params.movieId}/credits?language=en-US`,\n          options\n        );\n        const result = await response.json();\n        setCast(result);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchCastData();\n  }, [params.movieId]);\n\n  return (\n    <>\n      {cast && (\n        <ul>\n          {cast.cast.map(item => (\n            <li key={item.id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${item.profile_path}`\n                    : stubLittle\n                }\n                alt={item.name}\n                width=\"90px\"\n                height=\"135px\"\n              />\n              <p>{item.name}</p>\n              <p>Character: {item.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1ZmExZTQzYTY5NjQxYWQzYTdkZWZlZjIwMGJhMDdkOCIsInN1YiI6IjY0ODA3YjgzYmYzMWYyMDExZDQxNWU3NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ksZZ1upa3Zr_WyjRmw4RGhXYrHQMIjUphgwFV2WUWlw',\n  },\n};\n\nexport default options;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Cast","params","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCastData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","result","_context","prev","next","fetch","concat","movieId","options","sent","json","t0","console","error","stop","apply","arguments","_jsx","_Fragment","children","map","item","_jsxs","src","profile_path","stubLittle","alt","name","width","height","character","id","method","headers","accept","Authorization","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}